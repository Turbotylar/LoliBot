name: Build and deploy container
on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
    branches:
      - 'main'
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Setup the job
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup any metadata we may need
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=sha

      # Run the job
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=sakura-bot
          cache-to: type=gha,scope=sakura-bot

  deploy-develop:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v2.0
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Setup Kubeconfig
        run: |
          mkdir -p ~/.kube

          cat <<EOF > ~/.kube/config
          ${{ secrets.KUBECONFIG }}

          EOF

          sha256sum ~/.kube/config

      - name: Deploy migration job to Kubernetes
        run: |
          export SAKURA_BOT_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-$(git rev-parse --short HEAD)
          
          cd .deploy/k8s/migrate
          kustomize edit set image sakura=${SAKURA_BOT_IMAGE,,}
          kustomize edit set nameprefix $(git rev-parse --short HEAD)
          
          kustomize build | kubectl apply -n sakura-dev -f - 

      - name: Deploy Application to Kubernetes
        run: |
          export SAKURA_BOT_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-$(git rev-parse --short HEAD)
          
          cd .deploy/k8s/base
          kustomize edit set image sakura=${SAKURA_BOT_IMAGE,,}
          cd ../dev

          kustomize build | kubectl apply -n sakura-dev -f - 

  deploy-prod:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v2.0
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Setup Kubeconfig
        run: |
          mkdir -p ~/.kube

          cat <<EOF > ~/.kube/config
          ${{ secrets.KUBECONFIG }}

          EOF

          sha256sum ~/.kube/config

      - name: Deploy migration job to Kubernetes
        run: |
          export SAKURA_BOT_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-$(git rev-parse --short HEAD)
          
          cd .deploy/k8s/migrate
          kustomize edit set image sakura=${SAKURA_BOT_IMAGE,,}
          kustomize edit set nameprefix $(git rev-parse --short HEAD)
          
          kustomize build | kubectl apply -n sakura -f - 

      - name: Deploy Application to Kubernetes
        run: |
          export SAKURA_BOT_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-$(git rev-parse --short HEAD)
          
          cd .deploy/k8s/base
          kustomize edit set image sakura=${SAKURA_BOT_IMAGE,,}

          kustomize build | kubectl apply -n sakura -f - 